{Distributed Caching via Terracotta}

    Terracotta has been integrated with ehcache since Ehcache 1.4.

    From version 1.7 Ehcache has been seamlessly integrated with Terracotta 3.1 and takes just a few lines
    of config in ehcache.xml to get up and running.

*   Worked Example

    As this example shows, running Ehcache with Terracotta clustering is no different from normal programmatic use.

---
import net.sf.ehcache.Cache;
import net.sf.ehcache.CacheManager;
import net.sf.ehcache.Element;

public class TerracottaExample {
    CacheManager cacheManager = new CacheManager();

    public TerracottaExample() {
        Cache cache = cacheManager.getCache("sampleTerracottaCache");
        int cacheSize = cache.getKeys().size();
        cache.put(new Element("" + cacheSize, cacheSize));
        for (Object key : cache.getKeys()) {
            System.out.println("Key:" + key);
        }
    }

    public static void main(String[] args) throws Exception {
        new TerracottaExample();
    }
}

---

    The above example looks for sampleTerracottaCache.

    In ehcache.xml, we need to uncomment or add the following line:

---
    <terracottaConfig url="localhost:9510"/>
---
    which tells ehcache to load the Terracotta server config from localhost port 9510. Note: You must have a
    Terracotta 3.1 or higher server running locally for this example.

    Next we want to enable Terracotta clustering for the cache named <<<sampleTerracottaCache>>>. Uncomment or add the
    following in ehcache.xml.
    
---
   <cache name="sampleTerracottaCache"
          maxElementsInMemory="1000"
          eternal="false"
          timeToIdleSeconds="3600"
          timeToLiveSeconds="1800"
          overflowToDisk="false">
       <terracotta/>
   </cache>
---

    That's it!


*   Terracotta Configuration

    Terracotta configuration in ehcache.xml is in three parts:

    * CacheManager Configuration

    * Terracotta Server Configuration

    * Setting Terracotta clustering per cache

**  CacheManager Configuration

    The attributes of <ehcache> are:

    * name

    an optional name for the CacheManager.  The name is optional and primarily used
    for documentation or to distinguish Terracotta clustered cache state.  With Terracotta
    clustered caches, a combination of CacheManager name and cache name uniquely identify a
    particular cache store in the Terracotta clustered memory.


    * {updateCheck}

    an optional boolean flag specifying whether this CacheManager should check
    for new versions of Ehcache over the Internet.  If not specified, updateCheck="true".

    * monitoring

    an optional setting that determines whether the CacheManager should
    automatically register the SampledCacheMBean with the system MBean server.  Currently,
    this monitoring is only useful when using Terracotta and thus the "autodetect" value
    will detect the presence of Terracotta and register the MBean.  Other allowed values
    are "on" and "off".  The default is "autodetect".

---
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="ehcache.xsd"
             updateCheck="true" monitoring="autodetect">

---

**  {Terracotta Server Configuration}

    Note: You need to install and run one or more Terracotta servers to use Terracotta clustering.
    See http://www.terracotta.org/web/display/orgsite/Download.

    With a server/servers up and running you need to specify the location of the servers.

    Configuration can be specified in two main ways: by reference to a source of
    configuration or by use of an embedded Terracotta configuration file.

*** Specification of a source of configuration

    To specify a reference to a source (or sources) of configuration, use the url
    attribute.  The url attribute must contain a comma-separated list of:

    * path to the Terracotta configuration file (usually named tc-config.xml)

    * URL to the Terracotta configuration file

    * <server host>:<port> of a running Terracotta Server instance

    Example pointing to a Terracotta server installed on localhost:

---
    <terracottaConfig url="localhost:9510"/>
---

    Example using a path to Terracotta configuration file:

---
    <terracottaConfig url="/app/config/tc-config.xml"/>
---

    Example using a URL to a Terracotta configuration file:

---
    <terracottaConfig url="http://internal/ehcache/app/tc-config.xml"/>
---

    Example using multiple Terracotta server instance URLs (for fault tolerance):

---
    <terracottaConfig url="host1:9510,host2:9510,host3:9510"/>
---

*** Specification using embedded tc-config

    To embed a Terracotta configuration file within the ehcache configuration, simply
    place the usual Terracotta XML config within the <terracottaConfig> element.

    In this example we have two Terracotta servers running on <<<server1>>> and <<<server2>>>.
    
---
    <terracottaConfig>
        <tc-config>
            <servers>
                <server host="server1" name="s1"/>
                <server host="server2" name="s2"/>
            </servers>
            <clients>
                <logs>app/logs-%i</logs>
            </clients>
        </tc-config>
    </terracottaConfig>
---



*   More Information

    Please see {{http://www.terracotta.org/web/display/orgsite/Distributed+Cache}} for much more information.


    

    
