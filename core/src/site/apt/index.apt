 ------
 ehcache
 ------
 ------
 Date
 ------

Welcome to ehcache

 Ehcache is a widely used java distributed cache for general purpose caching, Java EE and light-weight containers.

 It features memory and disk stores, replicate by copy and invalidate, listeners, cache loaders, cache extensions, cache exception handlers,
 a gzip caching servlet filter and much {{{features.html}more}}...

 Ehcache is available under an Apache open source {{{license.html}license}} and is actively developed, maintained and supported.

* Latest News

** 13 May 2008: ehcache-1.5.0-beta1 release

   Ehcache 1.5.0-beta1 provides a host of new features and a few bug fixes:

*** New Features


    * Added JGroups Implementation. Thanks to Pierre Monestie for the patch(es) for this. Though new to the
      core distribution JGroups replication has been in production use in a large cluster for the last year.
      This does not create a dependency on JGroups unless you want to use this replicator. That will be made
      clearer when it is moved to a separate module before final release.


    * CachingFilter performance improvements,

    * Constructs performance improvements

    * added loadAll() to the loader implementation to enable preload without specifying keys.

    * diskPersistent now can be used with caches that use only MemoryStore in normal use but want to persist to disk

    * DiskStores are now optional. The element is now non-mandatory. This will simplify configurations particularly
                where multiple CacheManagers are being used.
              If one or more caches requires a DiskStore, and none is configured, java.io.tmpdir will be used and
                a warning message will be logged to encourage explicity configuration of the diskStore path.

    * The default RMI based cache replication can now configure a RemoteObject port so that it can be easily configured
      to work through firewalls. This is done by adding a new property remoteListenerPort to RMICacheManagerPeerListenerFactory
                to enable it to be specified.

    * Added a new system property expansion token "ehcache.disk.store.dir" to DiskStore configuration which
      can be used to specify the DiskStore directory on the command line or in an environment variable.

---
    e.g. java -Dehcache.disk.store.dir=/u01/myapp/diskdir ...
---

    * Added the ability to specify system property tokens using ${tokenname} in ehcache.xml which are then
                replaced when the configuration is loaded.

    * Updated the remote debugger with enhanced reporting and better documentation (See Logging page in
      the documentation).

      The new version prints a list of caches with replication configured, prints notifications as they
      happen, and periodically prints the cache name, size and total events received.


***   Summary of Bug Fixes

    * CachingFilter bug fixes for various rare edge conditions

    * Major speed up to shutdown process when diskPersistent is not being used

    * Fixed various shutdown exception when both Hibernate and Spring both try to destroy caches


    See the {{{http://ehcache.sourceforge.net/changes-report.html#1.5.0-beta1}changelog}} for complete details.


** 1 March 2008: ehcache is SourceForge project of the month

   Ehcache has been honoured as the February 2008 SourceForge project of the month. See {{http://sourceforge.net/community/index.php/potm-200802/}}.


** 21 February 2008: ehcache-1.4.1 maintenance release

    The version of ehcache is a minor maintenance release. The main reason for the release was to include ehcache-failsafe.xml
    which was omitted from the public maven repository version. See the {{{http://ehcache.sourceforge.net/changes-report.html#1.4.1}changelog}}
    for complete details.

** 31 January 2008: ehcache-1.4 released

    The final version of ehcache-1.4 is available on sourceforge and the Maven central repository.

    This version significantly enrichens the ehcache API and enhances extension of ehcache. The new features are:

    * You can now define CacheLoaders in the ehcache core API. They supplement the existing SelfPopulatingCache.
      They can be configured in ehcache.xml or programmatically. They can be used for cache warming, and simple pull-through
      caching. See the {{{/documentation/cache_loaders.html}Cache Loaders}} chapter in the documentation for more details.

    * You can now define a CacheExceptionHandler and register it progammatically or in ehcache.xml.
      This enables an exception handler to be registered with a cache so that it is called on exception rather than the exception being thrown.
      See the {{{/documentation/cache_exception_handlers.html}Cache Exception Handler}} chapter in the documentation for more details.

    * You can now define CacheExtensions and register them progammatically or in ehcache.xml. A CacheExtension is a generic facility which holds a reference
      to a cache and is bound to the cache lifecycle, making possible a wide variety of extensions to behaviour. Usage examples are
      a cache refresh timer or a file monitoring mechanism.
      See the {{{/documentation/cache_extensions.html}Cache Extensions}} chapter in the documentation for more details.

    This final release follows the second beta release by a month and fixes a few minor issues. See
    {{{http://ehcache.sourceforge.net/changes-report.html#1.4.0}changelog}} for complete details.


** 1 January 2008: ehcache-1.4-beta2 released

    The beta 2 version of ehcache-1.4 is available on sourceforge and the Maven central repository.

    The second beta release fixes 10 bugs, most of them in the new features being introduced in 1.4.0, reported
    by beta testers. See the
    {{{http://ehcache.sourceforge.net/changes-report.html#1.4.0-beta2}changelog}} for complete details.


 More {{{news.html}news}}...




