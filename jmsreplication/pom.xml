<?xml version="1.0"?>
<project>
  <parent>
    <artifactId>ehcache-parent</artifactId>
    <groupId>net.sf.ehcache</groupId>
    <version>2.3</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <groupId>net.sf.ehcache</groupId>
  <artifactId>ehcache-jmsreplication</artifactId>
  <name>JMS Replication</name>
  <version>0.5-SNAPSHOT</version>
  <packaging>jar</packaging>
  <description>This module provides replication via JMS 1.1</description>
  <dependencies>
    <dependency>
      <groupId>net.sf.ehcache</groupId>
      <artifactId>ehcache-core</artifactId>
      <version>2.5.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <!--This must be manually installed as it is not available in any repo-->
      <groupId>javax.jms</groupId>
      <artifactId>jms-api</artifactId>
      <version>1.1-rev-1</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8.1</version>
      <scope>test</scope>
    </dependency>
    <!--  Test scope -->
    <dependency>
      <groupId>com.sun.messaging.mq</groupId>
      <artifactId>imq</artifactId>
      <version>4.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.sun.messaging.mq</groupId>
      <artifactId>fscontext</artifactId>
      <version>4.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-core</artifactId>
      <version>5.2.0</version>
      <scope>test</scope>
    </dependency>
    <!-- Provided scope. This one, or another concrete logging implementation must be provided. -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-jdk14</artifactId>
      <version>1.6.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <properties>
    <!--Install each message queue and specify these properties-->
    <!-- you have to set these 2 env variables to be able to run system-tests-->
    <activemq.bin.dir>${env.ACTIVEMQ_HOME}/bin</activemq.bin.dir>
    <openmq.bin.dir>${env.OPENMQ_HOME}/bin</openmq.bin.dir>
  
  
    <!--Tested with Open MQ 4.2 and Active MQ 5.1-->
    <!--e.g. mvn -Denv.ACTIVEMQ_HOME=../../apache-activemq-5.1.0 -Denv.OPENMQ_HOME=../../mq  clean pre-integration-test -->
    </properties>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <includes>
            <include>**/*UnitTest.java</include>
          </includes>
          <excludes>
            <exclude>**/*$*</exclude>
            <exclude>**/Abstract*Test.java</exclude>
            <exclude>**/Test*.java</exclude>
            <exclude>**/constructs/web/**</exclude>
          </excludes>
          <forkMode>pertest</forkMode>
          <useFile>false</useFile>
          <systemProperties>
            <property>
              <name>net.sf.ehcache.skipUpdateCheck</name>
              <value>true</value>
            </property>
            <property>
              <name>java.awt.headless</name>
              <value>true</value>
            </property>
            <property>
              <name>
                net.sf.ehcache.speedAdjustmentFactor
              </name>
              <value>
                ${net.sf.ehcache.speedAdjustmentFactor}
              </value>
            </property>
          </systemProperties>
        </configuration>
        <executions>
          <execution>
            <id>integration-tests</id>
            <phase>integration-test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <includes>
                <include>**/*IntegrationTest.java</include>
                <include>**/*JMSReplicationTest.java</include>
                <include>**/*WebTest.java</include>
              </includes>
              <excludes>
                <exclude>**/Abstract*Test.java</exclude>
              </excludes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>2.3</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>checkstyle</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <skip>true</skip>
          <configLocation>${basedir}/checkstyle/checkstyle.xml</configLocation>
          <suppressionsLocation>${basedir}/checkstyle/suppressions.xml
                    </suppressionsLocation>
          <headerLocation>${basedir}/checkstyle/ClassHeader.txt</headerLocation>
          <enableRSS>false</enableRSS>
          <linkXRef>true</linkXRef>
          <consoleOutput>true</consoleOutput>
          <failsOnError>true</failsOnError>
          <failOnViolation>true</failOnViolation>
          <includeTestSourceDirectory>true</includeTestSourceDirectory>
          <enableRulesSummary>true</enableRulesSummary>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.2.1</version>
        <configuration>
          <filters>
            <filter>src/assemble/filter.properties</filter>
          </filters>
          <descriptors>
            <descriptor>src/assemble/distribution.xml</descriptor>
          </descriptors>
          <tarLongFileMode>gnu</tarLongFileMode>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>system-tests</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <configuration>
              <tasks>
                <echo>Stopping Message Queues on ${os.name}</echo>
                <exec dir="src/test/scripts" executable="sh" os="Mac OS X, Linux, AIX, Solaris, Windows" spawn="false">
                  <arg line="stop_message_queues"/>
                </exec>
              </tasks>
            </configuration>
            <executions>
              <execution>
                <id>stop-message-queues-if-running</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
              <execution>
                <id>stop-message-queues</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <!--We test using two popular message queues -->
                <id>start-message-queues</id>
                <phase>pre-integration-test</phase>
                <configuration>
                  <tasks>
                    <echo>Starting Active MQ from ${activemq.bin.dir} on
                                            ${os.name}
                                        </echo>
                    <exec dir="${activemq.bin.dir}" executable="sh" os="Mac OS X, Linux, AIX, Solaris, Windows" spawn="true">
                      <arg line="activemq"/>
                    </exec>
                    <echo>Starting Open MQ from ${openmq.bin.dir} on
                                            ${os.name}
                                        </echo>
                    <exec dir="${openmq.bin.dir}" executable="sh" os="Mac OS X, Linux, AIX, Solaris, Windows" spawn="true">
                      <arg line="imqbrokerd -javahome ${java.home}"/>
                    </exec>
                    <echo>Creating Open MQ administered objects in
                                            object store at /tmp from
                                            ${openmq.bin.dir} on ${os.name}
                                        </echo>
                    <exec dir="${openmq.bin.dir}" executable="sh" os="Mac OS X, Linux, AIX, Solaris, Windows" spawn="false">
                      <arg line="imqusermgr add -javahome ${java.home} -u test -p test -f"/>
                    </exec>
                    <exec dir="${openmq.bin.dir}" executable="sh" os="Mac OS X, Linux, AIX, Solaris, Windows" spawn="false">
                      <arg line="imqobjmgr -javahome ${java.home} add -t tf -l 'MyConnectionFactory' -o imqReconnect='true' -o imqPingInterval='5'
                                            -o imqDefaultUsername='test' -o imqDefaultPassword='test'
                                            -j java.naming.provider.url=file:///tmp -j java.naming.factory.initial=com.sun.jndi.fscontext.RefFSContextFactory -f "/>
                    </exec>
                    <exec dir="${openmq.bin.dir}" executable="sh" os="Mac OS X, Linux, AIX, Solaris, Windows" spawn="false">
                      <arg line="imqobjmgr -javahome ${java.home} add -t qf -l 'queueConnectionFactory' -o imqReconnect='true' -o imqPingInterval='5'
                                            -o imqDefaultUsername='test' -o imqDefaultPassword='test'
                                            -j java.naming.provider.url=file:///tmp -j java.naming.factory.initial=com.sun.jndi.fscontext.RefFSContextFactory -f "/>
                    </exec>
                    <exec dir="${openmq.bin.dir}" executable="sh" os="Mac OS X, Linux, AIX, Solaris, Windows" spawn="false">
                      <arg line="imqobjmgr -javahome ${java.home} add -t t -l 'ehcache' -o 'imqDestinationName=EhcacheTopicDest' -j java.naming.provider.url=file:///tmp -j java.naming.factory.initial=com.sun.jndi.fscontext.RefFSContextFactory -f "/>
                    </exec>
                    <exec dir="${openmq.bin.dir}" executable="sh" os="Mac OS X, Linux, AIX, Solaris, Windows" spawn="false">
                      <arg line="imqobjmgr -javahome ${java.home} add -t q -l 'ehcacheGetQueue' -o 'imqDestinationName=EhcacheGetQueueDest' -j java.naming.provider.url=file:///tmp -j java.naming.factory.initial=com.sun.jndi.fscontext.RefFSContextFactory -f "/>
                    </exec>
                    <sleep seconds="5"/>
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
