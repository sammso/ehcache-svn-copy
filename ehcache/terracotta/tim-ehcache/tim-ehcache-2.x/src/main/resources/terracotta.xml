<?xml version="1.0" encoding="UTF-8" ?>
<!--
All content copyright (c) 2003-2008 Terracotta, Inc.,
except as may otherwise be noted in a separate copyright notice.
All rights reserved.
-->
<xml-fragment>

    <instrumented-classes>
        <include>
            <class-expression>org.terracotta.modules.ehcache.store.ElementSerializationStrategy</class-expression>
        </include>
        <include>
            <class-expression>org.terracotta.modules.ehcache.store.HibernateElementSerializationStrategy
            </class-expression>
        </include>
        <include>
            <class-expression>org.terracotta.modules.ehcache.store.ClusteredStore</class-expression>
            <honor-transient>true</honor-transient>
        </include>
        <include>
            <class-expression>org.terracotta.modules.ehcache.store.ClusteredStoreBackendImpl</class-expression>
            <honor-transient>true</honor-transient>
        </include>

        <include>
            <class-expression>org.terracotta.modules.ehcache.store.SearchAttributeTypes</class-expression>
            <honor-transient>true</honor-transient>
        </include>

        <include>
            <class-expression>org.terracotta.modules.ehcache.store.EnterpriseClusteredStore</class-expression>
            <honor-transient>true</honor-transient>
        </include>

        <include>
            <class-expression>org.terracotta.modules.ehcache.store.ValueModeHandlerIdentity</class-expression>
        </include>
        <include>
            <class-expression>org.terracotta.modules.ehcache.store.ValueModeHandlerSoftLockAwareSerialization</class-expression>
        </include>
        <include>
            <class-expression>org.terracotta.modules.ehcache.store.ValueModeHandlerSerialization</class-expression>
            <honor-transient>true</honor-transient>
            <on-load>
                <method>init</method>
            </on-load>
        </include>
        <include>
            <class-expression>org.terracotta.modules.ehcache.store.ValueModeHandlerHibernate</class-expression>
        </include>
        <include>
            <class-expression>net.sf.ehcache.AbstractElementData</class-expression>
        </include>
        <include>
            <class-expression>net.sf.ehcache.SerializationModeElementData</class-expression>
        </include>
        <include>
            <class-expression>net.sf.ehcache.IdentityModeElementData</class-expression>
            <honor-transient>true</honor-transient>
        </include>
        <include>
            <class-expression>org.terracotta.modules.ehcache.coherence.IncoherentNodesSet</class-expression>
            <honor-transient>true</honor-transient>
            <on-load>
                <method>init</method>
            </on-load>
        </include>
        <include>
            <class-expression>org.terracotta.modules.ehcache.event.ClusteredEventReplicator</class-expression>
            <honor-transient>true</honor-transient>
            <on-load>
                <method>initializeOnLoad</method>
            </on-load>
        </include>
        <include>
            <class-expression>org.terracotta.modules.ehcache.transaction.ClusteredTransactionID</class-expression>
            <honor-transient>true</honor-transient>
        </include>
        <include>
            <class-expression>org.terracotta.modules.ehcache.transaction.ReadCommittedClusteredSoftLock</class-expression>
            <honor-transient>true</honor-transient>
        </include>
        <include>
            <class-expression>org.terracotta.modules.ehcache.transaction.ReadCommittedClusteredSoftLockFactory</class-expression>
            <honor-transient>true</honor-transient>
        </include>
        <include>
            <class-expression>org.terracotta.modules.ehcache.transaction.xa.XidClustered</class-expression>
            <honor-transient>true</honor-transient>
        </include>
        <include>
            <class-expression>org.terracotta.modules.ehcache.transaction.xa.ClusteredXidTransactionID</class-expression>
            <honor-transient>true</honor-transient>
        </include>
        <include>
            <class-expression>org.terracotta.modules.ehcache.store.servermap.ServerMapLocalStoreFactoryImpl</class-expression>
            <honor-transient>true</honor-transient>
        </include>
        <include>
            <class-expression>org.terracotta.modules.ehcache.writebehind.snapshots.SerializationKeySnapshot</class-expression>
            <honor-transient>true</honor-transient>
        </include>
        <include>
            <class-expression>org.terracotta.modules.ehcache.writebehind.snapshots.SerializationElementSnapshot</class-expression>
            <honor-transient>true</honor-transient>
        </include>           
    </instrumented-classes>

    <locks>
        <autolock>
            <method-expression>* org.terracotta.modules.ehcache.coherence.IncoherentNodesSet.removeIncoherentNode*(..)
            </method-expression>
            <lock-level>write</lock-level>
        </autolock>
        <autolock>
            <method-expression>* org.terracotta.modules.ehcache.coherence.IncoherentNodesSet.gotoIncoherentMode*(..)
            </method-expression>
            <lock-level>write</lock-level>
        </autolock>
        <autolock>
            <method-expression>* org.terracotta.modules.ehcache.coherence.IncoherentNodesSet.cleanIncoherentNodes*(..)
            </method-expression>
            <lock-level>write</lock-level>
        </autolock>
        <autolock>
            <method-expression>* org.terracotta.modules.ehcache.coherence.IncoherentNodesSet.queryIsNodeCoherent*(..)
            </method-expression>
            <lock-level>write</lock-level>
        </autolock>
        <autolock>
            <method-expression>*
                org.terracotta.modules.ehcache.coherence.IncoherentNodesSet.waitUntilClusterCoherent*(..)
            </method-expression>
            <lock-level>write</lock-level>
        </autolock>
        <autolock>
            <method-expression>* org.terracotta.modules.ehcache.coherence.IncoherentNodesSet.isClusterCoherent*(..)
            </method-expression>
            <lock-level>read</lock-level>
        </autolock>
        <autolock>
            <method-expression>* org.terracotta.modules.ehcache.coherence.IncoherentNodesSet.isFirstIncoherent*(..)
            </method-expression>
            <lock-level>read</lock-level>
        </autolock>

        <autolock>
            <method-expression>* org.terracotta.modules.ehcache.transaction.ClusteredTransactionID.markForCommit*(..)
            </method-expression>
            <lock-level>write</lock-level>
        </autolock>
        <autolock>
            <method-expression>* org.terracotta.modules.ehcache.transaction.ClusteredTransactionID.isDecisionCommit*(..)
            </method-expression>
            <lock-level>write</lock-level>
        </autolock>
        <autolock>
            <method-expression>* org.terracotta.modules.ehcache.transaction.xa.ClusteredXidTransactionID.markForCommit*(..)
            </method-expression>
            <lock-level>write</lock-level>
        </autolock>
        <autolock>
            <method-expression>* org.terracotta.modules.ehcache.transaction.xa.ClusteredXidTransactionID.isDecisionCommit*(..)
            </method-expression>
            <lock-level>write</lock-level>
        </autolock>
        <autolock>
            <method-expression>* org.terracotta.modules.ehcache.transaction.xa.ClusteredXidTransactionID.markForRollback*(..)
            </method-expression>
            <lock-level>write</lock-level>
        </autolock>
        <autolock>
            <method-expression>* org.terracotta.modules.ehcache.transaction.xa.ClusteredXidTransactionID.isDecisionRollback*(..)
            </method-expression>
            <lock-level>write</lock-level>
        </autolock>

        <autolock>
            <method-expression>* org.terracotta.modules.ehcache.transaction.ReadCommittedClusteredSoftLock.isExpired*(..)
            </method-expression>
            <lock-level>write</lock-level>
        </autolock>
        <autolock>
            <method-expression>* org.terracotta.modules.ehcache.transaction.ReadCommittedClusteredSoftLockFactory.collectExpiredTransactionIDs*(..)
            </method-expression>
            <lock-level>write</lock-level>
        </autolock>
    </locks>

    <distributed-methods>
        <method-expression run-on-all-nodes="false">
            void org.terracotta.modules.ehcache.event.ClusteredEventReplicator.dmiNotify*(..)
        </method-expression>
        <method-expression run-on-all-nodes="false">
            void org.terracotta.modules.ehcache.store.ClusteredStore.fireClusterCoherent*(..)
        </method-expression>
        <method-expression run-on-all-nodes="false">
            void org.terracotta.modules.ehcache.store.ClusteredStore.configChanged*(..)
        </method-expression>
    </distributed-methods>

</xml-fragment>
