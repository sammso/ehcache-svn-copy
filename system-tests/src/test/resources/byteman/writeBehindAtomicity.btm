RULE trace ClientTransactionManagerImpl begin
CLASS ClientTransactionManagerImpl
METHOD begin
AT ENTRY
IF !$lockLevel.isRead()
DO traceln("Begin Transaction Thread :" + Thread.currentThread().getName() + "Lock :" + $lock+ " LockLevel :"+ $lockLevel);
ENDRULE

RULE trace ClientTransactionManagerImpl commit
CLASS ClientTransactionManagerImpl
METHOD commit
AT ENTRY
IF !$level.isRead()
DO traceln("Commit Transaction Thread :" + Thread.currentThread().getName() + "Lock :" + $lock+ " LockLevel :"+ $level);
ENDRULE

RULE trace ClusteredStore putWithWriterEntry
CLASS ClusteredStore
METHOD putWithWriter
AT ENTRY
IF true
DO traceln("Begin putWithWriterThread :" + Thread.currentThread().getName());
ENDRULE

RULE trace ClusteredStore putWithWriterExit
CLASS ClusteredStore
METHOD putWithWriter
AT EXIT
IF true
DO traceln("Done putWithWriter Thread :" + Thread.currentThread().getName());
ENDRULE

RULE trace ClusteredStore putWithWriterLock
CLASS ClusteredStore
METHOD putWithWriter
AT INVOKE lock
IF true
DO traceln("lock() putWithWriter Thread :" + Thread.currentThread().getName() + "Lock " + $lock);
ENDRULE

RULE trace ClusteredStore removeWithWriterEntry
CLASS ClusteredStore
METHOD removeWithWriter
AT ENTRY
IF true
DO traceln("Begin removeWithWriterThread :" + Thread.currentThread().getName());
ENDRULE

RULE trace ClusteredStore removeWithWriterExit
CLASS ClusteredStore
METHOD removeWithWriter
AT EXIT
IF true
DO traceln("Done removeWithWriter Thread :" + Thread.currentThread().getName());
ENDRULE

RULE trace ClusteredStore removeWithWriterLock
CLASS ClusteredStore
METHOD removeWithWriter
AT INVOKE lock
IF true
DO traceln("lock() removeWithWriter Thread :" + Thread.currentThread().getName() + "Lock " + $lock);
ENDRULE

RULE trace ToolkitListImpl beginAtomicTransaction
CLASS ToolkitListImpl
METHOD unlockedAdd
AFTER INVOKE createTCCompatibleObject
IF true
DO traceln("beginAtomicTransaction :" + Thread.currentThread().getName());
ENDRULE

RULE trace ClusteredStore endAtomicTransaction
CLASS ClusteredStore
METHOD putWithWriter
AFTER INVOKE unlock
IF true
DO traceln("endAtomicTransaction putWithWriter Thread :" + Thread.currentThread().getName());
ENDRULE

RULE trace ClusteredStore endAtomicTransactionRemove
CLASS ClusteredStore
METHOD removeWithWriter
AFTER INVOKE unlock
IF true
DO traceln("endAtomicTransaction removeWithWriter Thread :" + Thread.currentThread().getName());
ENDRULE

