<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>net.sf.ehcache</groupId>
    <artifactId>ehcache-root</artifactId>
    <version>2.6.0-SNAPSHOT</version>
  </parent>

  <artifactId>ehcache</artifactId>
  <packaging>jar</packaging>
  <name>Ehcache</name>
  <description>Ehcache is an open source, standards-based cache used to boost performance, offload the database and simplify scalability. Ehcache is robust, proven and full-featured and this has made it the most widely-used Java-based cache.</description>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>src/assemble/EHCACHE-CORE-LICENSE.txt</url>
    </license>
  </licenses>
  <url>http://ehcache.org</url>


  <properties>
    <kit.name>${project.artifactId}-${project.version}-distribution</kit.name>
    <root.dir>${project.build.directory}/${kit.name}</root.dir>
    <terracotta.kit.path>${project.build.directory}/tmp/terracotta</terracotta.kit.path>
    <ehcache.sample.version>3.7.0-SNAPSHOT</ehcache.sample.version>
    <gmaven-plugin.version>1.3</gmaven-plugin.version>
  </properties>

  <dependencies>  
    <!--Compile scope. If you add something to compile scope, you have to do the same thing in core/pom.xml -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
      <scope>compile</scope>
    </dependency>
    
    <!-- With slf4j, users must choose a concrete logging implementation
      at deploy time, which they provide The maven dependency declarations are
      reproduced here for convenience.

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-jdk14</artifactId>
        <version>1.6.1</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-log4j12</artifactId>
        <version>1.6.1</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-simple</artifactId>
        <version>1.6.1</version>
      </dependency>
    -->    
    
    <!-- provided scope, used for packaging purpose only -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-jdk14</artifactId>
      <version>${slf4j.version}</version>
      <scope>provided</scope>
    </dependency>    
    <dependency>
      <groupId>net.sf.ehcache</groupId>
      <artifactId>ehcache-terracotta-bootstrap</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.terracotta.modules</groupId>
      <artifactId>tim-ehcache-2.x</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>net.sf.ehcache</groupId>
      <artifactId>ehcache-core</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>   
  </dependencies>
  
  <build>
    <resources>
      <resource>
        <directory>${basedir}/src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.4</version>
        <executions>
          <execution>
            <id>copy-dep</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.terracotta.modules</groupId>
                  <artifactId>tim-ehcache-2.x</artifactId>
                  <version>${project.version}</version>
                  <type>jar</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                  <destFileName>tim-ehcache-2.x.jar</destFileName>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          
          <execution>
            <id>unpack-standalone-and-terracotta</id>
            <configuration>
              <includeArtifactIds>ehcache-core,ehcache-terracotta-bootstrap</includeArtifactIds>
              <outputDirectory>${project.build.outputDirectory}</outputDirectory>
              <excludes>**/META-INF/maven/**,**/license.txt,**/thirdpartylicenses.txt</excludes>
            </configuration>
            <phase>process-resources</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
          </execution>
          
          <execution>
            <id>copy-TIMs</id>
            <configuration>
              <includeGroupIds>org.terracotta.modules</includeGroupIds>
              <outputDirectory>${project.build.outputDirectory}/META-INF/terracotta/TIMs</outputDirectory>
              <excludes>**/META-INF/maven/**,**/license.txt,**/thirdpartylicenses.txt</excludes>
            </configuration>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
          </execution>

          <execution>
            <id>copy-javadoc-sources</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>net.sf.ehcache</groupId>
                  <artifactId>ehcache-core</artifactId>
                  <version>${project.version}</version>
                  <classifier>sources</classifier>
                  <overWrite>true</overWrite>
                  <destFileName>${project.artifactId}-${project.version}-sources.jar</destFileName>
                </artifactItem>
                <artifactItem>
                  <groupId>net.sf.ehcache</groupId>
                  <artifactId>ehcache-core</artifactId>
                  <version>${project.version}</version>
                  <classifier>javadoc</classifier>
                  <overWrite>true</overWrite>
                  <destFileName>${project.artifactId}-${project.version}-javadoc.jar</destFileName>
                </artifactItem>
              </artifactItems>
              <outputDirectory>${project.build.directory}</outputDirectory>
            </configuration>
          </execution>          
        </executions>
      </plugin>      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.3</version>
        <configuration>
          <tasks>
            <unzip src="${project.build.directory}/tim-ehcache-2.x.jar" dest="${project.build.directory}/classes">
              <patternset>
                <includesfile name="src/main/resources/META-INF/terracotta/public-api-types"/>
              </patternset>
            </unzip>
          </tasks>
        </configuration>
        <executions>
          <execution>
            <id>unjar-classes</id>
            <phase>process-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.terracotta</groupId>
        <artifactId>maven-forge-plugin</artifactId>
        <configuration>
          <rootPath>${basedir}/..</rootPath>
          <manifestFile>${project.build.directory}/MANIFEST.MF</manifestFile>
          <manifestEntries>
            <License>Apache Software License, Version 2.0</License>
            <Terracotta-ProjectStatus>Supported</Terracotta-ProjectStatus>
            <Terracotta-Name>${project.artifactId}</Terracotta-Name>
            <Terracotta-Description>${project.description}</Terracotta-Description>
          </manifestEntries>
        </configuration>
        <executions>
          <execution>
            <id>create-manifest</id>
            <phase>process-resources</phase>
            <goals>
              <goal>manifest</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <archive>
            <manifestFile>${project.build.directory}/MANIFEST.MF</manifestFile>
          </archive>
        </configuration>  
      </plugin>
      <plugin>
        <groupId>com.goldin.plugins</groupId>
        <artifactId>maven-copy-plugin</artifactId>
        <version>0.2.3.6</version>
        <configuration>
          <verbose>false</verbose>
          <resources>
            <!-- clean up -->
            <resource>
              <runIf>{{ new File( project.build.directory, "${kit.name}" ).isDirectory() }}</runIf>
              <directory>${root.dir}</directory>
              <includes>
                <include>**/**</include>
              </includes>
              <clean>true</clean>
              <cleanEmptyDirectories>true</cleanEmptyDirectories>
            </resource>
            <!-- skeleton -->                
            <resource>
              <targetPath>${root.dir}</targetPath>
              <directory>${basedir}/src/main/assembly/root</directory>
              <preservePath>true</preservePath>
            </resource>
            <!-- lib -->                
            <resource>
              <targetPath>${root.dir}/lib</targetPath>
              <file>${project.build.directory}/${project.artifactId}-${project.version}.jar</file>
            </resource>
            <resource>
              <targetPath>${root.dir}/lib</targetPath>
              <dependencies>
                <dependency>
                  <groupId>org.slf4j</groupId>
                  <artifactId>slf4j-jdk14</artifactId>
                </dependency>
                <dependency>
                  <groupId>org.slf4j</groupId>
                  <artifactId>slf4j-api</artifactId>
                </dependency>
              </dependencies>
            </resource>
            <!-- src -->
            <resource>
              <targetPath>${root.dir}/src</targetPath>
              <file>${project.build.directory}/${project.artifactId}-${project.version}-sources.jar</file>
              <unpack>true</unpack>
            </resource>
            <!-- javadoc -->
            <resource>
              <targetPath>${root.dir}/javadoc</targetPath>
              <file>${project.build.directory}/${project.artifactId}-${project.version}-javadoc.jar</file>
              <unpack>true</unpack>
            </resource> 
            <!-- terracotta -->                
            <resource>
              <runIf>{{ new File(project.properties['terracotta.kit.path']).isDirectory() }}</runIf>
              <targetPath>${root.dir}/terracotta</targetPath>
              <directory>${terracotta.kit.path}</directory>
              <excludes>
                <exclude>**/ehcache/**</exclude>
                <exclude>**/quartz/**</exclude>
                <exclude>**/sessions/**</exclude>
              </excludes>
              <preservePath>true</preservePath>
            </resource>
            <resource>
              <runIf>{{ new File(project.properties['terracotta.kit.path']).isDirectory() }}</runIf>
              <targetPath>${root.dir}/samples</targetPath>
              <directory>${terracotta.kit.path}/ehcache/samples</directory>
              <preservePath>true</preservePath>
            </resource>
            <resource>
              <runIf>{{ new File(project.properties['terracotta.kit.path']).isDirectory() }}</runIf>
              <targetPath>${root.dir}/samples/colorcache/bin</targetPath>
              <directory>${basedir}/src/main/assembly</directory>
              <includes>
                <include>relative-paths.*</include>
              </includes>
            </resource>
            <resource>
              <runIf>{{ new File(project.properties['terracotta.kit.path']).isDirectory() }}</runIf>
              <targetPath>${root.dir}/samples/events/bin</targetPath>
              <directory>${basedir}/src/main/assembly</directory>
              <includes>
                <include>relative-paths.*</include>
              </includes>
            </resource>             
          </resources>
        </configuration>
        <executions>
          <execution>
            <id>package-with-no-tc</id>
            <phase>package</phase>
            <goals>
              <goal>copy</goal>
            </goals>
          </execution>
        </executions>            
      </plugin>
      <plugin>
        <groupId>org.codehaus.gmaven</groupId>
        <artifactId>gmaven-plugin</artifactId>
        <version>${gmaven-plugin.version}</version>
        <executions>
          <execution>
            <id>create-tarball</id>
            <phase>package</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>         
              <source>
                def srcdir = new File(project.basedir, "target/${kit.name}") 
                ant.tar(destfile: "${srcdir}.tar.gz", longfile: "gnu", compression: "gzip") {
                  tarfileset(dir: "${srcdir}", prefix: "${kit.name}", excludes: "**/.placeholder,**/bin/**,**/lib/**,**/*.sh,**/*.bat")
                  tarfileset(dir: "${srcdir}", prefix: "${kit.name}", includes: "**/bin/**,**/lib/**,**/*.sh,**/*.bat", filemode: "755")
                } 
              </source>
            </configuration>
          </execution>              
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.5</version>
        <executions>
          <execution>
            <id>attach-javadoc-sources</id>
            <phase>package</phase>
            <goals>
              <goal>attach-artifact</goal>
            </goals>
            <configuration>
              <artifacts>
                <!-- sources artifact attached by default -->
                <artifact>
                  <file>${project.build.directory}/${project.artifactId}-${project.version}-javadoc.jar</file>
                  <type>jar</type>
                  <classifier>javadoc</classifier>
                </artifact>
                <artifact>
                  <file>${project.build.directory}/${kit.name}.tar.gz</file>
                  <type>tar.gz</type>
                  <classifier>distribution</classifier>
                </artifact>                
              </artifacts>
            </configuration>
          </execution>
        </executions>
      </plugin>      
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>package-tc</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.gmaven</groupId>
            <artifactId>gmaven-plugin</artifactId>
            <version>${gmaven-plugin.version}</version>
            <executions>
              <execution>
                <id>unjar-tc-kit</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <source>
                    if (new File(project.properties['terracotta.kit.path']).exists()) {
                      return
                    }
                    tc_kit_url = project.properties['tc-kit-url']
                    if (tc_kit_url == null) {
                      println "-Dtc-kit-url option is missing. Building the kit without Terracotta"
                    } else {
                      ant.mkdir(dir:project.build.directory)
                      dest_file = project.build.directory + "/tc.tar.gz"
                      if (tc_kit_url.startsWith("http")) {
                        ant.get(src:tc_kit_url, dest:dest_file, usetimestamp:true)
                      } else {
                        ant.copy(file:tc_kit_url, tofile:dest_file)
                      }
                      tmp_dir = project.build.directory + "/tmp"
                      ant.delete(dir:tmp_dir, quiet:true)
                      ant.mkdir(dir:tmp_dir)
                      ant.untar(src:dest_file, dest:tmp_dir, compression:"gzip")
                      // assume only one folder inside tmp
                      kit_path = null
                      new File(tmp_dir).eachFile {
                        kit_path = it
                      }
                      kit_path.renameTo(new File(project.properties['terracotta.kit.path']))
                    }
                  </source>
                </configuration>                
              </execution>             
            </executions>
          </plugin>     
        </plugins>
      </build>
    </profile>
  </profiles>  

  
  <repositories>
    <repository>
      <id>terracotta-snapshots</id>
      <url>http://www.terracotta.org/download/reflector/snapshots</url>
    </repository>

    <repository>
      <id>terracotta-releases</id>
      <url>http://www.terracotta.org/download/reflector/releases</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>terracotta-snapshots</id>
      <url>http://www.terracotta.org/download/reflector/snapshots</url>
    </pluginRepository>
    <pluginRepository>
      <id>terracotta-releases</id>
      <url>http://www.terracotta.org/download/reflector/releases</url>
    </pluginRepository>
    <pluginRepository>
      <id>maven-copy-plugin</id>
      <url>http://evgeny-goldin.org/artifactory/repo/</url>
    </pluginRepository>    
  </pluginRepositories>

  <issueManagement>
    <system>JIRA</system>
    <url>https://jira.terracotta.org/jira/browse/EHC</url>
  </issueManagement>

</project>
