{Logging}

* {Java Util Logging}

    As of 1.7.1, Ehcache uses the the slf4j ({{http://www.slf4j.org}}) logging facade. Plug in your own logging framework.

** Concrete Logging Implementation Use in Maven

    With slf4j, users must choose a concrete logging implementation at deploy time.

    The maven dependency declarations are reproduced here for convenience. Add <one> of these to your Maven pom.

---
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <version>1.5.8</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.5.8</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.5.8</version>
        </dependency>
---


** Concrete Logging Implemenation Use in the Download Kit

    We provide the slf4j-api and slf4j-jdk14 jars in the kit along with the ehcache jars so that, if the app does not already
    use SLF4J, you have everything you need.

    Additional concrete logging implementations can be downloaded from {{http://www.slf4j.org}}.

* Recommended Logging Levels

    Ehcache seeks to trade off informing production support developers or important messages and cluttering the log.

    {ERROR} ERROR messages should not occur in normal production and indicate that action should be taken.

    {WARN} WARN messages generally indicate a configuration change should be made or an unusual event
    has occurred.

    {DEBUG} DEBUG and TRACE messages are for development use. All DEBUG level statements
    are surrounded with a guard so that no performance cost is incurred unless the logging
    level is set.

    Setting the logging level to DEBUG should provide more information on the source of any problems.
    Many logging systems enable a logging level change to be made without restarting the application.

