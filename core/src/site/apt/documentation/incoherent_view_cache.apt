 ---
 IncoherentViewCache
 ---

{IncoherentViewCache}



    <<<IncoherentViewCache>>> is a {{{./cache_decorators}decorated cache}} which provides an incoherent view
    of a Terracotta coherent cache.

    You can have this and have the underlying coherent cache at the same time.  The IncoherentViewCache is placed
    in the CacheManager under its own name so that it can be separately referenced.

    The purpose of this is to allow business logic which does not care about coherency faster access to data. It is
    akin to READ_UNCOMMITTED in database isolation levels.

    It is a separate module.

    Note: The features in this cache may evolve over time.

*   Creating an  IncoherentViewCache

**  Programmatically

---
    Cache cache = cacheManager.getCache("existingUndecoratedCache");
    IncoherentViewCache incoherentViewCache = new IncoherentViewCache(cache, newName);
    cacheManager.addCache(incoherentViewCache);  //adds an Ehcache
---

**  In ehcache.xml

---

    NOTE: cacheDecoratorFactory needs to be written!

    <cache name="sample/DistributedCache3"
           maxElementsInMemory="10"
           eternal="false"
           timeToIdleSeconds="100"
           timeToLiveSeconds="100"
           overflowToDisk="true">
        <cacheDecoratorFactory
                class="net.sf.ehcache.terracotta.IncoherentCacheFactory"
                properties="failFast=true, localReadsOnDisconnect=true ..."/>
    </cache>
---
